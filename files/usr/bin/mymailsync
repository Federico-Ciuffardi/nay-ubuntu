#!/usr/bin/env bash

# Run only if not already running in other instance
pgrep -x mbsync >/dev/null && { echo "mbsync is already running." ; exit ;}

# First, we have to get the right variables for the mbsync file, the pass
# archive, notmuch and the GPG home.  This is done by searching common profile
# files for variable assignments. This is ugly, but there are few options that
# will work on the maximum number of machines.
eval "$(grep -h -- \
	"^\s*\(export \)\?\(MBSYNCRC\|PASSWORD_STORE_DIR\|NOTMUCH_CONFIG\|GNUPGHOME\)=" \
	"$HOME/.profile" "$HOME/.bash_profile" "$HOME/.zprofile" "$HOME/.bashrc" "$HOME/.zshrc" "$HOME/.pam_environment" 2>/dev/null)"

[ -n "$MBSYNCRC" ] && alias mbsync="mbsync -c $MBSYNCRC" || MBSYNCRC="$HOME/.mbsyncrc"

# Settings are different for MacOS (Darwin) systems.
notify() {
  :
  # notify-send --app-name="mutt-wizard" "mutt-wizard" "ðŸ“¬ $2 new mail(s) in \`$1\` account."
}
messageinfo() {
  notify-send --app-name="mutt-wizard" "ðŸ“§$from:" "$subject"
}

# Check account for new mail. Notify if there is new content.
syncandnotify() {
  acc="$(echo "$account" | sed "s/.*\///")"
  if [ -z "$opts" ]; then mbsync "$acc"; else mbsync "$opts" "$acc"; fi
  new=$(find "$HOME/.local/share/mail/$acc/INBOX/new/" "$HOME/.local/share/mail/$acc/Inbox/new/" "$HOME/.local/share/mail/$acc/inbox/new/" -type f -newer "$HOME/.config/mutt/.mailsynclastrun" 2> /dev/null)
  newcount=$(echo "$new" | sed '/^\s*$/d' | wc -l)
  if [ "$newcount" -gt "0" ]; then
    notify "$acc" "$newcount" &
    for file in $new; do
      from=$(grep "$file" -e "^From:" | perl -CS -MEncode -ne 'print decode("MIME-Header", $_)')
      subject=$(grep "$file" -e "^Subject:" | perl -CS -MEncode -ne 'print decode("MIME-Header", $_)')
      messageinfo &
    done
  fi
}

# Sync accounts passed as argument or all.
if [ "$#" -eq "0" ]; then
    accounts="$(awk '/^Channel/ {print $2}' "$MBSYNCRC")"
else
    for arg in "$@"; do
        [ "${arg%${arg#?}}" = '-' ] && opts="${opts:+${opts} }${arg}" && shift 1
    done
    accounts=$*
fi

# Parallelize multiple accounts
for account in $accounts ; do
    syncandnotify &
done

wait

notmuch new 2>/dev/null

#Create a touch file that indicates the time of the last run of mailsync
touch "$HOME/.config/mutt/.mailsynclastrun"
